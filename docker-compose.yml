services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.0
    container_name: kafka-to-db-zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
      - ZOOKEEPER_SYNC_LIMIT=2
    ports:
      - "2181:2181"

  kafka:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka-to-db-kafka
    depends_on:
      - zookeeper
    ports:
      - "29092:29092"
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - CONFLUENT_METRICS_ENABLE=false
      - CONFLUENT_SUPPORT_METRICS_ENABLE=false
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list >/dev/null 2>&1"]
      interval: 15s
      timeout: 10s
      retries: 10
      start_period: 20s

  topic-init:
    image: confluentinc/cp-kafka:7.6.0
    container_name: kafka-to-db-topic-init
    depends_on:
      kafka:
        condition: service_healthy
    entrypoint: ["/bin/bash", "/usr/local/bin/create-topic.sh"]
    volumes:
      - ./docker/scripts/create-topic.sh:/usr/local/bin/create-topic.sh:ro
    restart: "no"

  postgres:
    image: postgres:15
    container_name: kafka-to-db-postgres
    environment:
      - POSTGRES_USER=kafka
      - POSTGRES_PASSWORD=kafka
      - POSTGRES_DB=kafka
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./docker/initdb:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U kafka -d kafka"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  worker:
    build: .
    container_name: kafka-to-db-worker
    depends_on:
      postgres:
        condition: service_healthy
      kafka:
        condition: service_healthy
      topic-init:
        condition: service_completed_successfully
    environment:
      - DATABASE_URL=postgres://kafka:kafka@postgres:5432/kafka?sslmode=disable
      - DB_TABLE=kafka_events
      - KAFKA_BROKERS=kafka:9092
      - KAFKA_TOPIC=staging.events
      - KAFKA_GROUP=event-writer
      - KAFKA_VERSION=3.6.1
      - WORKER_COUNT=32
      - JOB_BUFFER=4096
      - BATCH_SIZE=256
      - BATCH_FLUSH_INTERVAL=40ms
      - MAX_RETRIES=5
      - METRICS_ADDR=:2112
    ports:
      - "2112:2112"
    restart: unless-stopped

volumes:
  postgres-data:
